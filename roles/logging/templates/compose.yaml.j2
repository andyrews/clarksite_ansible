networks:
  {{ docker_network }}:
    external: true
volumes:
  {{ tempo_volume }}:
    external: true

services:
  
  {{ container_tempo_init }}:
    image: &tempoImage {{ container_visualization_name }}/{{ container_disttracing_name }}:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - {{ tempo_volume }}:/var/tempo
    networks:
      - {{ docker_network }}

  {{ container_cache_name }}:
    image: {{ container_cache_name }}:{{ cache_tag }}
    container_name: {{ container_cache_name }}
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m # Set the maximum memory usage
      - MEMCACHED_THREADS=4 # Number of threads to use
    networks:
      - {{ docker_network }}

  {{ container_disttracing_name }}:
    image: *tempoImage
    command: ["-config.file={{ tempo_container_config }}"]
    volumes:
      - /Git_Clones/clarksite_ansible/roles/logging/files/tempo.yaml:{{ tempo_container_config }}
      - {{ tempo_volume }}:/var/tempo
    ports:
      - "14268:14268" # jaeger ingest
      - "{{ tempo_port }}:3200" # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
      - "9411:9411" # zipkin
    depends_on:
      - {{ container_tempo_init }}
      - {{ container_cache_name }}
    networks:
      - {{ docker_network }}

  {{ container_metric_name }}:
    image: prom/{{ container_metric_name }}:latest
    command:
      - --config.file={{ prometheus_container_config }}
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - /Git_Clones/clarksite_ansible/roles/logging/files/prometheus.yaml:{{ prometheus_container_config }}
    ports:
      - "{{ prometheus_port }}:{{ prometheus_port }}"
    networks:
      - {{ docker_network }}

  {{ container_log_name }}:
    image: {{ container_visualization_name }}/{{ container_log_name }}
    ports:
      - "{{ loki_port }}:3100"
    command: -config.file={{ loki_container_config }}
    networks:
      - {{ docker_network }}

  {{ container_loglisten_name }}:
    image: {{  container_visualization_name }}/{{ container_loglisten_name }}:latest
    volumes:
      - /Git_Clones/clarksite_ansible/roles/logging/files/promtail-config.yml:{{ promtail_container_config }}
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file={{ promtail_container_config }}
    networks:
      - {{ docker_network }}

  {{ container_visualization_name }}:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode,traceqlEditor,metricsSummary
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app
    image: {{ container_visualization_name }}/{{ container_visualization_name }}
    volumes:
      - /Git_Clones/clarksite_ansible/roles/logging/files/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - "{{ grafana_port }}:3000"
    networks:
      - {{ docker_network }}
